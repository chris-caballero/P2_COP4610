next_floor = -1;
while(1) {
    switch(state) {
        case OFFLINE: 
            //elevator just started, so it is empty
            //elevator direction defaults to 1 which is up
            if waitingPassengers > 0:
                for floor from 1 to top_floor:
                    if floor has people:
                        next_floor = floor;
                        state = UP;  //go to the floor
                        break;
                    else:
                        continue;
                if next_floor == current_floor:         //lobby has people
                    state = DOWN;                       //set state to DOWN so we get people on lobby then go up
                else:                                   //lobby doesn't have people, but higher floor does
                    state = UP;                         //set state to UP
                    ++current_floor;
            else:   
                state = IDLE;                       //no people around, set state to IDLE
            
        case UP:
            direction = 1
            if current_floor == next_floor or floor has people going up and elevator has space:
                state = LOADING;
            else:
                ++current_floor;

        case DOWN:
            direction = -1 
            if current_floor == next_floor or floor has people going down and elevator has space:
                state = LOADING;
            else:
                --current_floor;

                
        case LOADING:
            //first unload elevator if possible
            uld_res = unload_elevator();
            //then attempt to load if possible
            ld_res = load_elevator();

            if travelingPassengers == 0:
                if waitingPassengers == 0:
                    state = IDLE;
                else:
                    next_floor = get_next_floor();
                    if next_floor == -1:
                        state = IDLE;
                    else if next_floor > current_floor:
                        state = UP;
                        ++current_floor;
                    else:
                        state = DOWN;
                        --current_floor;
            else:                           //travelingPassengers > 0
                if direction == 1:
                    next_floor = get_closest_above();
                    state = UP;
                    ++current_floor;
                else if direction == -1;
                    next_floor = get_closest_below();
                    state = DOWN;
                    --current_floor;



        case IDLE:
            if waitingPassengers == 0:
                Wait();
            else:
                next_floor = get_next_floor();
                if next_floor > current_floor:
                    state = UP;
                    ++current_floor;
                else if next_floor < current_floor:
                    state = DOWN;
                    --current_floor;
                else:
                    if next_floor == top_floor:
                        direction = 1;
                    else if next_floor == lobby:
                        direction = -1;
                    state = LOADING;
    }

}

get_closest_above() {
    closest = top_floor + 1;
    for passenger in elevator:
        closest = MIN(passenger_destination, closest);
    return closest;   
}

get_closest_below() {
    closest = -1;
    for passenger in elevator:
        closest = MAX(passenger_destination, closest);
    return closest; 
}

get_next_floor() {
    for floor from top_floor to 1:
        if floor has people:
            return floor;
    return -1;
}

unload_elevator() {
    //unload passengers from elevator
}

load_elevator() {
    if current_floor == top_floor or current_floor == lobby:
        direction *= -1;
    //load passengers going in same direction
    
}

